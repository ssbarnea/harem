#!/usr/bin/env ansible-playbook
# %YAML 1.2
---
- hosts: n0 # baremetals
  gather_facts: false
  tasks:
    # TODO:
    # systemctl enable --now cockpit.socket

    - name: Configure nfs mounts
      when: nfs_exports | length > 0
      include_role:
        name: geerlingguy.nfs

    - name: Disable password login
      become: true
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^(#\\s*)?{{ item.key }} "
        line: "{{ item.key }} {{ item.value }}"
      notify: restart sshd
      with_dict:
        ChallengeResponseAuthentication: no
        PasswordAuthentication: no
        Protocol: 2

    - name: Install baremetail utils
      become: true
      package:
        name:
          - usbutils # lsusb
          - autofs

    - name: config autofs service
      become: true
      service:
        name: autofs
        enabled: true
        state: started
    # mount /dev/sdb /media/wd10

    - include_role:
        name: ensure-mail

    - include_role:
        name: ensure-proxy

    - include_role:
        name: virsh

    - include_role:
        name: slave

    # - shell: |
    #     npm config set proxy ${http_proxy}
    #     npm config set https-proxy ${http_proxy}
    #   # NFS multipath https://vspherecentral.vmware.com/t/esxi-host-and-virtual-machine/storage-and-networking/nfs-4-1-multipathing-configuration-and-best-practices/
    #   # iSCSI multipath https://opentodo.net/2015/06/high-available-nfs-server-setup-iscsi-multipath/

    - name: remove system docker if needed
      package:
        name:
          - docker
          - docker-common
        state: absent
      become: true

    - include_role:
        name: ensure-docker
#     - package:
#         name:
#           - wget
#           - git
#           - python-virtualenv
#           - ansible
#           - gcc
#           - python-lxml
#           - iftop
#           - nodejs

#     - package:
#         name: lldpd
#     # lldpctl

#     - service:
#         name: lldpd
#         state: started

#     - name: enabled ssd TRIM
#       service:
#         name: fstrim.timer
#         state: started
#         enabled: true

#     - template:
#         src: update-motd.sh.j2
#         dest: /etc/profile.d/update-moth.sh
#     # cat /proc/net/bonding/bond0

#     - template:
#         src: ps1.sh.j2
#         dest: /etc/profile.d/ps1.sh

#     - package:
#         name: yum-cron
#     - ini_file:
#         path: /etc/yum/yum-cron.conf
#         section: "{{ item.key | basename }}"
#         option: "{{ item.key | splitext }}"
#         value: "{{ item.value }}"
#       with_dict:
#         commands.apply_updates: "yes"
#         commands.download_updates: "yes"
#         emitters.emit_via: email
#         email.email_from: root@localhost
#         email.email_to: root
#       register: result
#     - service:
#         name: yum-cron
#         state: "{% if result.changed %}re{% endif %}started"

#     - name: upgrade pip
#       pip:
#         name:
#           - pip
#           - setuptools
#         extra_args: --user --upgrade --upgrade-strategy only-if-needed
#     - name: install openstack cli
#       pip:
#         name:
#           - python-openstackclient
#           - python-heatclient
#           - git-review
#         extra_args: --user --upgrade --upgrade-strategy only-if-needed
