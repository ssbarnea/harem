---
- become: true
  block:
    - name: configure volumes
      file:
        path: "{{ docker_volumes_root }}/{{ item }}"
        state: directory
      with_items:
        - "{{ role_name }}"

    - name: create compose file
      copy:
        src: docker-compose.yml
        dest: /{{ docker_volumes_root }}/{{ role_name }}/docker-compose.yml
    # - copy:
    #     src: grafana.ini
    #     dest: /{{ docker_volumes_root }}/monitoring/grafana/grafana.ini
    #     force: false

    # - docker_service:
    #     build: yes
    #     debug: yes
    #     project_src: "{{ docker_volumes_root }}/monitoring"
    #     pull: yes
    #     services: metrics
    #   register: result
    - debug: var=domain
    - name: "deploy {{ role_name }} container"
      docker_container:
        name: "{{ role_name }}"
        image: matrixdotorg/synapse:latest
        state: started
        # recreate: yes
        published_ports:
          - "8008:8008"
          - "8448:8448"
        volumes:
          - "/{{ docker_volumes_root }}/{{ role_name }}:/data"
        output_logs: true
        env:
          SYNAPSE_REPORT_STATS: "yes"
          SYNAPSE_SERVER_NAME: "{{ matrix_fqdn }}"
          SYNAPSE_NO_TLS: "yes"
          SYNAPSE_ENABLE_REGISTRATION: "yes"
          SYNAPSE_SMTP_HOST: "{{ smtp_host }}"
          SYNAPSE_SMTP_PORT: 465
          SYNAPSE_SMTP_USER: "{{ smtp_user }}"
          SYNAPSE_SMTP_PASSWORD: "{{ smtp_password }}"
          SYNAPSE_CONFIG_PATH: /data/homeserver.yaml
      register: result
    - debug: var=result
# TODO: configure haproxy for SSL termination of grafana:3003
# pfsense autogenerated config: ./var/etc/haproxy/haproxy.cfg
