#!/usr/bin/env bash
set -euo pipefail

# Schipt that regenerate shell environment variable cache that is used in
# order to speed up shell logins.

# echo 'export PATH="$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH"' >> ~/.bash_profile
OPENSSL_PREFIX=$(brew --prefix openssl)

for MYPATH in \
  /usr/local/opt/ruby/bin \
  "${M2_HOME:-}/bin" \
  "/usr/local/sbin" \
  "/usr/local/bin" \
  /usr/local/opt/gettext/bin \
  /usr/local/opt/nss/bin \
  /opt/local/bin \
  /opt/local/sbin \
  "${HOME}/.local/bin" \
  /usr/local/opt/make/libexec/gnubin \
  /usr/local/opt/sqlite/bin \
  /usr/local/opt/go/libexec/bin \
  /usr/local/opt/gnu-getopt/bin \
  ~/c/harem/bin \
  /.poetry/bin
  # "${HOME}/.rbenv/bin" \
  # "${HOME}/.rbenv/shims" \
do
  if [[ ! ":$PATH:" == *":$MYPATH:"* ]] && [ -d "$MYPATH" ]; then
      export PATH=${MYPATH}:$PATH
  fi
done
unset MYPATH


# PATH append at end
for MYPATH in \
  /usr/local/opt/python/libexec/bin \
  /opt/X11/bin \
  /usr/local/opt/inetutils/libexec/gnubin \
  ~/Library/Python/2.7/bin \
  /opt/local/bin \
  . # cwd, bit dangereus but if kept last it should be ok-ish and convenient if you forget to add './' before script name.
  do
  if [[ ! ":$PATH:" == *":$MYPATH:"* ]] && [ -d "$MYPATH" ]; then
      export PATH=$PATH:${MYPATH}
  fi
done


# --- COMPILATION ---
for V in \
  /usr/local/opt/zlib/lib \
  /usr/local/opt/openssl/lib \
  /usr/local/opt/nss/lib \
  /usr/local/opt/libarchive/lib \
  /usr/local/opt/icu4c/lib \
  $OPENSSL_PREFIX/lib \
  /usr/local/opt/sqlite/lib \
  /usr/local/opt/libvirt/lib
do
  [ -d "${V}" ] && LDFLAGS="${LDFLAGS} -L${V}"
done

for V in \
  /usr/local/opt/zlib/include \
  /usr/local/opt/openssl/include \
  /usr/local/opt/nss/include \
  /usr/local/opt/icu4c/include \
  /usr/local/opt/libarchive/include \
  /usr/local/opt/sqlite/include \
  /usr/local/opt/libvirt/include \
  /usr/local/opt/lxc/
do
  [ -d "${V}" ] && CPPFLAGS="${CPPFLAGS} -I${V}"
done

CFLAGS="-I/usr/local/include -L/usr/local/lib -I$OPENSSL_PREFIX/include -I$(xcrun --show-sdk-path)/usr/include"

#export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$(python-config --prefix)/include"

#export C_INCLUDE_PATH=/System/Library/Frameworks/Python.framework/Headers

export LDFLAGS CPPFLAGS CFLAGS

for MYPATH in \
  /usr/local/opt/nss/lib/pkgconfig \
  /usr/local/opt/libarchive/lib/pkgconfig \
  /usr/local/opt/zlib/lib/pkgconfig \
  /usr/local/opt/icu4c/lib/pkgconfig \
  /usr/local/opt/sqlite/lib/pkgconfig \
  /usr/local/opt/libarchive/lib/pkgconfig \
  /usr/local/lib/pkgconfig
do
  if [[ ! ":$PKG_CONFIG_PATH:" == *":$MYPATH:"* ]] && [ -d "$MYPATH" ]; then
      PKG_CONFIG_PATH=${MYPATH}:$PKG_CONFIG_PATH
  fi
done
export PKG_CONFIG_PATH=${PKG_CONFIG_PATH%:}
unset MYPATH

if [ -f /usr/libexec/java_home ]; then
    JAVA_HOME="$(/usr/libexec/java_home -v 1.8)"
    export JAVA_HOME
fi

cat >~/.config/envcache.sh <<EOL
# Cached env generated by mkenv
export PATH=$PATH
export JAVA_HOME=$JAVA_HOME

export CFLAGS="$CFLAGS"
export CPPFLAGS="$CPPFLAGS"
export LDFLAGS="$LDFLAGS"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH"
EOL


echo Repair file associations
# duti -x yaml
duti -s com.microsoft.VSCode yaml all
